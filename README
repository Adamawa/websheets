websheets: Online version of coding handouts with blanks
========================================================
Created originally by David Pritchard (daveagp@gmail.com) in 2013.
Released under the GNU Affero General Public License.
CodeMirror plugin and "exercises" content subdirectory licensed separately.

MIRRORS (as of writing)

http://www.cs.princeton.edu/~cos126/websheets/index.php (Java 7)
http://cscircles.cemc.uwaterloo.ca/websheets/index.php (Java 8)
(note, they do not share a database)

Note, you can link to a particular exercise with
.../index.php#NameAge
or a group of exercises with 
.../index.php?group=HelloWorld+NameAge+NextYear#NameAge

INSTALLATION

Install these on your server first:
 https://github.com/cemc/safeexec
 https://github.com/daveagp/java_jail 
This requires root access. See the instructions therein for details. It is best to
install these in locations that are not served to users by your web server.

Next, in some folder accessible to your web server, run

git clone --recursive https://github.com/daveagp/websheets

You should be able to see the frontend, and an exercise, at 
 http://your.website/url/to/websheets/index.php
although it will warn you of configuration problems, and
submitting anything will give you some errors.

Next, copy ws-config.example.json to ws-config.json.

Set the bare minimum options: the location of 

To set up ws-config.json,
4) Setup ws-config.json (see below)
5) Create the db table (optional. see below)
6) Make more exercises (optional. see below)

==Step 4==
ws-config.json is a json-formatted file, variously loaded by php and 
python, that contains all the secrets that are specific to your setup. 
It should
look like this:

{
 "safeexec-executable-abspath":"/absolute/path/to/.../safeexec/safeexec",
 "java_jail-abspath":"/absolute/path/to/.../java_jail/",
 "hybridauth-base_url":
         "http://your-website.../websheets/hybridauth/hybridauth/index.php",
 "db-host": "...",
 "db-user": "...",
 "db-password": "...",
 "db-database": "...",
 "facebook-id": "your facebook api id",
 "facebook-secret": "your facebook api secret key",
 "google-id":"your google api id",
 "google-secret":"your google api secret key"
}

you can delete facebook-* if you don't want to use facebook,
and google-* if you don't want to use google

==Step 5==
Here's the db table format:

CREATE TABLE IF NOT EXISTS `ws_history` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `problem` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `submission` varchar(5000) COLLATE utf8_unicode_ci NOT NULL,
  `result` mediumtext COLLATE utf8_unicode_ci NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `passed` tinyint(1) NOT NULL DEFAULT '0',
  `meta` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  KEY `user` (`user`,`problem`,`passed`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1;

==Step 6==
To define more exercises, follow the examples in the "exercises" directory. 
They are key-value string pairs, written as python modules only because this 
makes less escaping necessary.

Note that, as of writing (May 2014), there is no proper documentation on
how to define exercises. Also, certain aspects, especially spacing issues
around "default", "fake" or "hidden" code, are very ungainly. Cleaning this
interface up is ongoing work.

THANKS

Thanks to the COS 126 staff at Princeton for offering feedback when using
this tool from Fall 2013 to Spring 2014: 
Donna Gabai, Maia Ginsburg, Bob Sedgewick and Doug Clark.

FILES LISTING

ws-config.json - you should fill this in
websheet.{css,js} - create/render the partially read-only codemirror area
index.{php,js} - browser for multiple websheets
load.{php,py} - (for ajax) load a problem to show
submit.{php,py} - (for ajax) submit an attempt
include.php - authentication used by all php files
Websheet.py - Python model of a Websheet, command-line tools to use with them
config.py - Python to interact with safeexec and database
GenericTester.java - grader template runs & compares student/reference code
