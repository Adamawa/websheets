websheets: Online version of coding handouts with blanks
========================================================
Created originally by David Pritchard (daveagp@gmail.com) in 2013.
Released under the GNU Affero General Public License (but see
other licenses for subdirectories/subrepositories).

GETTING STARTED

See the list of the main components of the websheets system here:
http://cscircles.cemc.uwaterloo.ca/websheets.html

You can create problems and get your student grades without installation, 
using one of these mirrors:

 http://cscircles.cemc.uwaterloo.ca/websheets/ (Java 8)
 http://bits.usc.edu/websheets/ (focuses on C++)
 http://www.cs.princeton.edu/~cos126/websheets/index.php (old, Java 7)

However, you may wish to do extra customizations, requiring your own mirror.

INSTALLATION

Install these on your server first:
 https://github.com/cemc/safeexec
 https://github.com/daveagp/java_jail 
This requires root access. See the instructions therein for details. It is best to
install these in locations that are not served to users by your web server.

Next, in some folder accessible to your web server, run

git clone --recursive https://github.com/daveagp/websheets

You should be able to see the frontend, and an exercise, at 
 http://your.website/url/to/websheets/index.php
although it will warn you of configuration problems.

Next, copy ws-config.example.json to ws-config.json. 
Reloading that page, it won't warn you, but submitting will
cause errors.

Set up the otions in ws-config.json.

Run the commands in "install.sql", e.g. with:
  mysql database_name -u user_name -p < install.sql

ADDITIONAL SETUP

There are some optional things you can do once the basics are working:

0. To download updates, you need two commands to get the subrepos:
   git pull; git submodule update

1. Setup or change login mechanisms if you want the websheets site to
   remember each user's latest submission and what they've solved. 
   If you want to use facebook and/or google, get API keys for them 
   and change the listed options in ws-config.json. Delete the options
   you don't want to use. 

   For authentication we use "hybridauth" which we use as a unified wrapper 
   for user email authentication (they are remembered by email address). 
   With some work you can set up a custom authentication for your school
   if they have a PHP authentication system; follow the Princeton example
   in auth.php. You should also be able to use other hybridauth providers
   with a little work.

   You need a google "Client ID for web applications" and "Client secret"
   or a facebook "App ID" and "App Secret" See the hybridauth documentation
   for more details.

2. The C++ backend can basically use the same 'java_jail' jail as long as
    (a) you need to add a subdirectory "scratch" with apache write permission
    (b) you need to add libraries libstdc++.so.6 & libgcc_s.so.1 to the jail

3. See embed.html for an example of embedding Websheets in other pages,

4. WARNING: If you use a database, you'll be putting a DB password in ws-config.json.
   Please check that
     http://your.website/url/to/websheets/ws-config.json
   is inaccessible; .htaccess tries to do this, but you should confirm it works.

THANKS

Thanks to the COS 126 staff at Princeton for offering feedback when using
this tool from Fall 2013 to Spring 2014: 
Donna Gabai, Maia Ginsburg, Bob Sedgewick and Doug Clark.

Thanks to Mark Redekopp at U. Southern California for great feedback when
the C++ backend was developed.


