{
    "combined_with_daveagp": [
        true,
        "package combined.daveagp;\nimport stdlibpack.*;\npublic class Summer {\n   public static double sum(double[] a) {\n      double result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result*1.000001;\n   }\n\n   public static int sum(int[] a) {\n      int result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n\n   // basic tests\n   public static void main(String[] args) {\n      StdOut.println(sum(new int[]{1, 2, 6}));\n      StdOut.println(sum(new double[]{Math.PI, Math.E, Math.log(2)}));\n   }\n}\n",
        {
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7,
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "21": 19,
            "22": 20,
            "23": 21,
            "24": 22
        }
    ],
    "initial_snippets": [
        "\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    ],
    "json_template": [
        "public class Summer {",
        "\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "   // basic tests\n   public static void main(String[] args) {\n      StdOut.println(sum(new int[]{1, 2, 6}));\n      StdOut.println(sum(new double[]{Math.PI, Math.E, Math.log(2)}));\n   }\n}"
    ],
    "combined_with_initial": [
        false,
        "Line 15, editable region 1:\nmust not be empty"
    ],
    "daveagp": [
        "\n   public static double sum(double[] a) {\n      double result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result*1.000001;\n   }\n\n   public static int sum(int[] a) {\n      int result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n\n"
    ],
    "reference_snippets": [
        "\n   public static double sum(double[] a) {\n      double result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n   \n   public static int sum(int[] a) {\n      int result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n"
    ],
    "combined_with_reference": [
        true,
        "package combined.reference;\nimport stdlibpack.*;\npublic class Summer {\n   public static double sum(double[] a) {\n      double result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n   \n   public static int sum(int[] a) {\n      int result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n   // basic tests\n   public static void main(String[] args) {\n      StdOut.println(sum(new int[]{1, 2, 6}));\n      StdOut.println(sum(new double[]{Math.PI, Math.E, Math.log(2)}));\n   }\n}\n",
        {
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7,
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "21": 19,
            "22": 20,
            "23": 21
        }
    ],
    "reference_solution": "package reference;\nimport stdlibpack.*;\npublic class Summer {\n   public static double sum(double[] a) {\n      double result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n   \n   public static int sum(int[] a) {\n      int result = 0;\n      for (int i=0; i < a.length; i++)\n         result += a[i]; \n      return result;\n   }\n   // basic tests\n   public static void main(String[] args) {\n      StdOut.println(sum(new int[]{1, 2, 6}));\n      StdOut.println(sum(new double[]{Math.PI, Math.E, Math.log(2)}));\n   }\n}\n"
}
