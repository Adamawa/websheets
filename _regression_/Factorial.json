{
    "combined_with_daveagp": [
        true,
        "package combined.daveagp;\nimport stdlibpack.*;\npublic class Factorial {\n   public static  long  factorial( int n ) {\n      // base case\n      if ( n <= 1 ) \n         return  1 ;\n   \n      // reduction step\n      // note that n! = n * (n-1) * ... * 2 * 1 = n * ((n-1) * ... * 2 * 1)\n      return  n  * factorial( n-1 );\n   }\n   \n   public static void main(String[] args) {\n      StdOut.println(factorial(4));  // should be 24\n      StdOut.println(factorial(10)); // should be 3628800\n      StdOut.println(factorial(20)); // watch for overflow. what return type?\n   }\n}\n",
        {
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7
        }
    ],
    "combined_with_initial": [
        false,
        "Line 2, editable region 1:\nmust not be empty"
    ],
    "combined_with_reference": [
        true,
        "package combined.reference;\nimport stdlibpack.*;\npublic class Factorial {\n   public static  long  factorial( int n ) {\n      // base case\n      if ( n == 0 ) \n         return  1 ;\n   \n      // reduction step\n      // note that n! = n * (n-1) * ... * 2 * 1 = n * ((n-1) * ... * 2 * 1)\n      return  n  * factorial( n-1 );\n   }\n   \n   public static void main(String[] args) {\n      StdOut.println(factorial(4));  // should be 24\n      StdOut.println(factorial(10)); // should be 3628800\n      StdOut.println(factorial(20)); // watch for overflow. what return type?\n   }\n}\n",
        {
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7
        }
    ],
    "daveagp": [
        " long ",
        " int n ",
        " n <= 1 ",
        " 1 ",
        " n ",
        " n-1 "
    ],
    "initial_snippets": [
        "      ",
        "       ",
        "        ",
        "   ",
        "   ",
        "     "
    ],
    "json_template": [
        "public class Factorial {\n   public static ",
        "      ",
        " factorial(",
        "       ",
        ") {\n      // base case\n      if (",
        "        ",
        ") \n         return ",
        "   ",
        ";\n   \n      // reduction step\n      // note that n! = n * (n-1) * ... * 2 * 1 = n * ((n-1) * ... * 2 * 1)\n      return ",
        "   ",
        " * factorial(",
        "     ",
        ");\n   }\n   \n   public static void main(String[] args) {\n      StdOut.println(factorial(4));  // should be 24\n      StdOut.println(factorial(10)); // should be 3628800\n      StdOut.println(factorial(20)); // watch for overflow. what return type?\n   }\n}"
    ],
    "reference_snippets": [
        " long ",
        " int n ",
        " n == 0 ",
        " 1 ",
        " n ",
        " n-1 "
    ],
    "reference_solution": "package reference;\nimport stdlibpack.*;\npublic class Factorial {\n   public static  long  factorial( int n ) {\n      // base case\n      if ( n == 0 ) \n         return  1 ;\n   \n      // reduction step\n      // note that n! = n * (n-1) * ... * 2 * 1 = n * ((n-1) * ... * 2 * 1)\n      return  n  * factorial( n-1 );\n   }\n   \n   public static void main(String[] args) {\n      StdOut.println(factorial(4));  // should be 24\n      StdOut.println(factorial(10)); // should be 3628800\n      StdOut.println(factorial(20)); // watch for overflow. what return type?\n   }\n}\n"
}
