{
    "combined_with_daveagp": [
        true,
        "package combined.daveagp;\nimport stdlibpack.*;\npublic class FrequencyTable {\n       // Dependencies: ST.java (available on precepts page), StdIn, StdOut\n       // maintain counts of all words seen so far\n       // the key is the word and the value is the count\n       private ST< String, Integer > st =  new ST<String, Integer>() ;\n   \n       // remark: we have not declared a constuctor! but Java lets every class \n       // have a no-argument constructor by default. It only runs the line of \n       // code above (instance variable initialization).\n   \n       // add 1 to the frequency of this word\n       public void click(String word) {\n           int count = count(word);\n           st.put(word, count + 1);\n       }\n   \n       // what is the frequency of this word?\n       public int count(String word) {\n           if (!st. contains ( word )) return 0;  // if word is not in ST\n           else return  st . get ( word );        // get word's count\n       }\n   \n       // print out all words and frequencies\n       public void show() {\n           // foreach loop. goes through all keys in alphabetical order\n           for (String word : st) {\n               // print out frequency and word, separated by a space\n               StdOut.println( count ( word ) + \" \" +  word );\n           }\n       }\n   \n       // method used by client to count all words in StdIn\n       public static void main(String[] args) {\n   \n           // build frequency table from words on standard input\n           FrequencyTable freq = new FrequencyTable();\n           while (!StdIn.isEmpty()) {\n               String word = StdIn.readString();\n               freq. click (word);\n           }\n   \n           // print frequency table to standard output\n           freq.show();\n       }\n}\n",
        {
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "21": 19,
            "22": 20,
            "23": 21,
            "24": 22,
            "25": 23,
            "26": 24,
            "27": 25,
            "28": 26,
            "29": 27,
            "3": 1,
            "30": 28,
            "31": 29,
            "32": 30,
            "33": 31,
            "34": 32,
            "35": 33,
            "36": 34,
            "37": 35,
            "38": 36,
            "39": 37,
            "4": 2,
            "40": 38,
            "41": 39,
            "42": 40,
            "43": 41,
            "44": 42,
            "45": 43,
            "46": 44,
            "47": 45,
            "48": 46,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7
        }
    ],
    "combined_with_initial": [
        false,
        "Line 5:\nmust not be empty"
    ],
    "combined_with_reference": [
        true,
        "package combined.reference;\nimport stdlibpack.*;\npublic class FrequencyTable {\n       // Dependencies: ST.java (available on precepts page), StdIn, StdOut\n       // maintain counts of all words seen so far\n       // the key is the word and the value is the count\n       private ST< String, Integer > st =  new ST<String, Integer>() ;\n   \n       // remark: we have not declared a constuctor! but Java lets every class \n       // have a no-argument constructor by default. It only runs the line of \n       // code above (instance variable initialization).\n   \n       // add 1 to the frequency of this word\n       public void click(String word) {\n           int count = count(word);\n           st.put(word, count + 1);\n       }\n   \n       // what is the frequency of this word?\n       public int count(String word) {\n           if (!st. contains ( word )) return 0;  // if word is not in ST\n           else return  st . get ( word );        // get word's count\n       }\n   \n       // print out all words and frequencies\n       public void show() {\n           // foreach loop. goes through all keys in alphabetical order\n           for (String word : st) {\n               // print out frequency and word, separated by a space\n               StdOut.println( count ( word ) + \" \" +  word );\n           }\n       }\n   \n       // method used by client to count all words in StdIn\n       public static void main(String[] args) {\n   \n           // build frequency table from words on standard input\n           FrequencyTable freq = new FrequencyTable();\n           while (!StdIn.isEmpty()) {\n               String word = StdIn.readString();\n               freq. click (word);\n           }\n   \n           // print frequency table to standard output\n           freq.show();\n       }\n}\n",
        {
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "21": 19,
            "22": 20,
            "23": 21,
            "24": 22,
            "25": 23,
            "26": 24,
            "27": 25,
            "28": 26,
            "29": 27,
            "3": 1,
            "30": 28,
            "31": 29,
            "32": 30,
            "33": 31,
            "34": 32,
            "35": 33,
            "36": 34,
            "37": 35,
            "38": 36,
            "39": 37,
            "4": 2,
            "40": 38,
            "41": 39,
            "42": 40,
            "43": 41,
            "44": 42,
            "45": 43,
            "46": 44,
            "47": 45,
            "48": 46,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7
        }
    ],
    "daveagp": [
        " String, Integer ",
        " new ST<String, Integer>() ",
        " contains ",
        " word ",
        " st ",
        " get ",
        " word ",
        " count ",
        " word ",
        " word ",
        " click "
    ],
    "initial_snippets": [
        "                 ",
        "                           ",
        "          ",
        "      ",
        "    ",
        "     ",
        "      ",
        "       ",
        "      ",
        "      ",
        "       "
    ],
    "json_template": [
        "public class FrequencyTable {\n       // Dependencies: ST.java (available on precepts page), StdIn, StdOut\n       // maintain counts of all words seen so far\n       // the key is the word and the value is the count\n       private ST<",
        "                 ",
        "> st = ",
        "                           ",
        ";\n   \n       // remark: we have not declared a constuctor! but Java lets every class \n       // have a no-argument constructor by default. It only runs the line of \n       // code above (instance variable initialization).\n   \n       // add 1 to the frequency of this word\n       public void click(String word) {\n           int count = count(word);\n           st.put(word, count + 1);\n       }\n   \n       // what is the frequency of this word?\n       public int count(String word) {\n           if (!st.",
        "          ",
        "(",
        "      ",
        ")) return 0;  // if word is not in ST\n           else return ",
        "    ",
        ".",
        "     ",
        "(",
        "      ",
        ");        // get word's count\n       }\n   \n       // print out all words and frequencies\n       public void show() {\n           // foreach loop. goes through all keys in alphabetical order\n           for (String word : st) {\n               // print out frequency and word, separated by a space\n               StdOut.println(",
        "       ",
        "(",
        "      ",
        ") + \" \" + ",
        "      ",
        ");\n           }\n       }\n   \n       // method used by client to count all words in StdIn\n       public static void main(String[] args) {\n   \n           // build frequency table from words on standard input\n           FrequencyTable freq = new FrequencyTable();\n           while (!StdIn.isEmpty()) {\n               String word = StdIn.readString();\n               freq.",
        "       ",
        "(word);\n           }\n   \n           // print frequency table to standard output\n           freq.show();\n       }\n}"
    ],
    "reference_snippets": [
        " String, Integer ",
        " new ST<String, Integer>() ",
        " contains ",
        " word ",
        " st ",
        " get ",
        " word ",
        " count ",
        " word ",
        " word ",
        " click "
    ],
    "reference_solution": "package reference;\nimport stdlibpack.*;\npublic class FrequencyTable {\n       // Dependencies: ST.java (available on precepts page), StdIn, StdOut\n       // maintain counts of all words seen so far\n       // the key is the word and the value is the count\n       private ST< String, Integer > st =  new ST<String, Integer>() ;\n   \n       // remark: we have not declared a constuctor! but Java lets every class \n       // have a no-argument constructor by default. It only runs the line of \n       // code above (instance variable initialization).\n   \n       // add 1 to the frequency of this word\n       public void click(String word) {\n           int count = count(word);\n           st.put(word, count + 1);\n       }\n   \n       // what is the frequency of this word?\n       public int count(String word) {\n           if (!st. contains ( word )) return 0;  // if word is not in ST\n           else return  st . get ( word );        // get word's count\n       }\n   \n       // print out all words and frequencies\n       public void show() {\n           // foreach loop. goes through all keys in alphabetical order\n           for (String word : st) {\n               // print out frequency and word, separated by a space\n               StdOut.println( count ( word ) + \" \" +  word );\n           }\n       }\n   \n       // method used by client to count all words in StdIn\n       public static void main(String[] args) {\n   \n           // build frequency table from words on standard input\n           FrequencyTable freq = new FrequencyTable();\n           while (!StdIn.isEmpty()) {\n               String word = StdIn.readString();\n               freq. click (word);\n           }\n   \n           // print frequency table to standard output\n           freq.show();\n       }\n}\n"
}
