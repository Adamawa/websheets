{
    "combined_with_daveagp": [
        true,
        "package combined.daveagp;\nimport stdlibpack.*;\npublic class NOrdered {\n   public static void main(String[] args) {\n      int n = args.length; // for convenience\n      boolean output = true;\n      for (int i=0; i<args.length-2; i++) {\n         int a = Integer.parseInt(args[i]);\n         int b = Integer.parseInt(args[i+1]);\n         int c = Integer.parseInt(args[i+2]);\n         if ((a-b)*(b-c)<=0) output = false;\n      }\n      if (args.length==2 && Integer.parseInt(args[0])==Integer.parseInt(args[1]))\n         output = false;\n      StdOut.println(output);\n\n\n\n\n\n   }\n}\n",
        {
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "21": 19,
            "22": 20,
            "23": 21,
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7
        }
    ],
    "combined_with_initial": [
        false,
        "Line 18:\nmust not be empty"
    ],
    "combined_with_reference": [
        true,
        "package combined.reference;\nimport stdlibpack.*;\npublic class NOrdered {\n   public static void main(String[] args) {\n      int n = args.length; // for convenience\n      int[] vals = new int[n];\n      for (int i=0; i<n; i++)\n         vals[i] = Integer.parseInt(args[i]);\n      \n      // check for increasing\n      boolean increasing = true;\n      for (int i=0; i<n-1; i++) // one shorter than usual\n         increasing = increasing && (vals[i] > vals[i+1]);\n   \n      // check for decreasing\n      boolean decreasing = true;\n      for (int i=0; i<n-1; i++) // one shorter than usual\n         decreasing = decreasing && (vals[i] < vals[i+1]);\n   \n      System.out.println(increasing || decreasing);\n   }\n}\n",
        {
            "10": 8,
            "11": 9,
            "12": 10,
            "13": 11,
            "14": 12,
            "15": 13,
            "16": 14,
            "17": 15,
            "18": 16,
            "19": 17,
            "20": 18,
            "21": 19,
            "22": 20,
            "23": 21,
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6,
            "9": 7
        }
    ],
    "daveagp": [
        "\n      boolean output = true;\n      for (int i=0; i<args.length-2; i++) {\n         int a = Integer.parseInt(args[i]);\n         int b = Integer.parseInt(args[i+1]);\n         int c = Integer.parseInt(args[i+2]);\n         if ((a-b)*(b-c)<=0) output = false;\n      }\n      if (args.length==2 && Integer.parseInt(args[0])==Integer.parseInt(args[1]))\n         output = false;\n      StdOut.println(output);\n\n\n\n\n\n"
    ],
    "initial_snippets": [
        "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    ],
    "json_template": [
        "public class NOrdered {\n   public static void main(String[] args) {\n      int n = args.length; // for convenience",
        "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "   }\n}"
    ],
    "reference_snippets": [
        "\n      int[] vals = new int[n];\n      for (int i=0; i<n; i++)\n         vals[i] = Integer.parseInt(args[i]);\n      \n      // check for increasing\n      boolean increasing = true;\n      for (int i=0; i<n-1; i++) // one shorter than usual\n         increasing = increasing && (vals[i] > vals[i+1]);\n   \n      // check for decreasing\n      boolean decreasing = true;\n      for (int i=0; i<n-1; i++) // one shorter than usual\n         decreasing = decreasing && (vals[i] < vals[i+1]);\n   \n      System.out.println(increasing || decreasing);\n"
    ],
    "reference_solution": "package reference;\nimport stdlibpack.*;\npublic class NOrdered {\n   public static void main(String[] args) {\n      int n = args.length; // for convenience\n      int[] vals = new int[n];\n      for (int i=0; i<n; i++)\n         vals[i] = Integer.parseInt(args[i]);\n      \n      // check for increasing\n      boolean increasing = true;\n      for (int i=0; i<n-1; i++) // one shorter than usual\n         increasing = increasing && (vals[i] > vals[i+1]);\n   \n      // check for decreasing\n      boolean decreasing = true;\n      for (int i=0; i<n-1; i++) // one shorter than usual\n         decreasing = decreasing && (vals[i] < vals[i+1]);\n   \n      System.out.println(increasing || decreasing);\n   }\n}\n"
}
