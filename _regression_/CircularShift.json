{
    "combined_with_daveagp": [
        true,
        "package combined.daveagp;\nimport stdlibpack.*;\npublic class CircularShift {\n   public static boolean isCircularShift(String S, String T) {\n      return (S+S).indexOf(T)>=0 && S.length() == T.length();\n   }\n}\n",
        {
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6
        }
    ],
    "combined_with_initial": [
        false,
        "Line 4, editable region 1:\nmust not be empty"
    ],
    "combined_with_reference": [
        true,
        "package combined.reference;\nimport stdlibpack.*;\npublic class CircularShift {\n   public static boolean isCircularShift(String S, String T) {\n      return S.length() == T.length() && (S+S).indexOf(T)>=0;\n   }\n}\n",
        {
            "3": 1,
            "4": 2,
            "5": 3,
            "6": 4,
            "7": 5,
            "8": 6
        }
    ],
    "daveagp": [
        "\n      return (S+S).indexOf(T)>=0 && S.length() == T.length();\n"
    ],
    "initial_snippets": [
        "\n\n"
    ],
    "json_template": [
        "public class CircularShift {\n   public static boolean isCircularShift(String S, String T) {",
        "\n\n",
        "   }\n}"
    ],
    "reference_snippets": [
        "\n      return S.length() == T.length() && (S+S).indexOf(T)>=0;\n"
    ],
    "reference_solution": "package reference;\nimport stdlibpack.*;\npublic class CircularShift {\n   public static boolean isCircularShift(String S, String T) {\n      return S.length() == T.length() && (S+S).indexOf(T)>=0;\n   }\n}\n"
}
